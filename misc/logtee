#!/bin/bash

die() {
    local rc=$?
    echo "error: $*"
    exit $rc
} >&2

readonly default_suffix=.log
readonly default_format=%Y%m%dT%H%M%S

usage() {
    local -i rc=$1
    echo "usage: ${0##*/} [options] <basename>

tee output to a log file suffixed by creation timestamp
maintain a symlink to the latest log file (or directory if the suffix is a relative path)

options:
  -s | --suffix SUFFIX      suffix appended after the timestamp (default: $default_suffix)
  -f | --format FORMAT      timestamp format (default: $default_format)"
    exit $rc
} >&2

getopt -T &>/dev/null
(( $? != 4 )) && die "bad getopt"
getopt="$(getopt -n "${0##*/}" -l suffix:,format:,help -o +s:f:h -- "$@")" || exit $?
eval set -- "$getopt"

suffix=$default_suffix
format=$default_format

while true; do
    case "$1" in
        -s|--suffix) suffix="$2"; shift ;;
        -f|--format) format="$2"; shift ;;
        -h|--help) usage 0 ;;
        --) shift; break ;;
        *) die "internal error" ;;
    esac
    shift
done

basename="$1"
ts="$(date "+$format")"

file="$basename$ts$suffix"

# if the suffix is a relative path, only symlink the variable component of the file path
link="${basename}latest${suffix%%/*}"
target="$basename$ts${suffix%%/*}"

if [[ "$file" == */* ]]; then
    dir="${file%/*}"
    if ! [[ -d "$dir" ]]; then
        echo "creating log directory: $dir" >&2
        mkdir -p "$dir" || die mkdir
    fi
fi

[[ -L "$link" ]] && rm "$link"
ln -s "${target##*/}" "$link" || echo "warning: failed to create log symlink: $link" >&2

echo "logging to: $file" >&2

tee "$file"
